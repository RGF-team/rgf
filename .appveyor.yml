build: false
image: Visual Studio 2015

platform:
  - x64
  - x86

environment:
  matrix:
    - PYTHON_VERSION: 2.7
      MINICONDA: C:\Miniconda
    - PYTHON_VERSION: 3.4
      MINICONDA: C:\Miniconda34
    - PYTHON_VERSION: 3.5
      MINICONDA: C:\Miniconda35
    - PYTHON_VERSION: 3.6
      MINICONDA: C:\Miniconda36

clone_depth: 50

install:
  - git submodule update --init --recursive  # retrieve fast_rgf
  - set PATH=%PATH:C:\Program Files\Git\usr\bin;=%  # Delete sh.exe from PATH (mingw32-make fix)
  - ps: if($env:PLATFORM -eq "x64") {
            $env:MINICONDA += "-x64";
            $env:PATH += ";C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64\bin"
        }
        else {$env:PATH += ";C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1\mingw32\bin"}
  - set PATH=%MINICONDA%;%MINICONDA%\Scripts;%PATH%
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda create -q -n test-environment python=%PYTHON_VERSION% numpy scipy nose pandas scikit-learn
  - activate test-environment
  - conda install mkl=2017.0.3  # Temp fix. Delete the line in the future when compatebility will be fixed.
  - pip install pytest>=3.3
  - ps: $env:RGF_VER = (Get-Content rgf\VERSION).trim()
  - python setup.py sdist --formats gztar
  - pip install dist\rgf_python-%RGF_VER%.tar.gz -v

# Temp solution for testing FastRGF
  - cd include/fast_rgf/build
  - cmake .. -G "MinGW Makefiles"
  - mingw32-make
  - mingw32-make install
  - cd ../bin
  - copy *.exe %HOMEPATH%
  - cd ../../..

test_script:
  - pytest tests/ -o "python_files=*.py" -v
  - pip uninstall -y rgf_python
  - python setup.py install
  - pytest tests/ -o "python_files=*.py" -v

after_test:
  - IF "%PLATFORM%"=="x64" (
    python setup.py bdist_wheel --plat-name=win-amd64 --universal)
    ELSE (
    python setup.py bdist_wheel --plat-name=win32 --universal)

artifacts:
  - path: dist/*
    name: pip
